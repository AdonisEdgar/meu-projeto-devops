name: Deploy to AWS

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag and push Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            docker build -t frontend:$IMAGE_TAG ./frontend
            docker tag frontend:$IMAGE_TAG 750311440214.dkr.ecr.us-east-1.amazonaws.com/frontend:$IMAGE_TAG
            docker push 750311440214.dkr.ecr.us-east-1.amazonaws.com/meudevops:$IMAGE_TAG
          elif [ "${{ github.ref }}" == "refs/heads/staging" ]; then
            docker build -t frontend:$IMAGE_TAG ./frontend
            docker tag frontend:$IMAGE_TAG 750311440214.dkr.ecr.us-east-1.amazonaws.com/frontend:$IMAGE_TAG
            docker push 750311440214.dkr.ecr.us-east-1.amazonaws.com/meudevops:$IMAGE_TAG
          else
            echo "Branch não configurada para deploy"
            exit 1
          fi

      - name: Update ECS Service
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            aws ecs update-service --cluster production-cluster --service frontend-service --force-new-deployment
          elif [ "${{ github.ref }}" == "refs/heads/staging" ]; then
            aws ecs update-service --cluster staging-cluster --service frontend-service --force-new-deployment
          else
            echo "Branch não configurada para deploy"
            exit 1
          fi
